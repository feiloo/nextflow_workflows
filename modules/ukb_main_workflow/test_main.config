manifest {
  homePage = 'https://github.com/feiloo/ngs_pipeline'
  description = 'nextflow module wrapper for qiagen clc server'
  mainScript = 'main.nf'
  version = '0.0.1'
}

includeConfig "$NEXTFLOW_MODULES/variantinterpretation/nextflow.config"

nextflow.enable.strict = true
workDir = "$NEXTFLOW_WORKDIR_CUSTOM"
offline = true
cleanup = false
nextflow.enable.moduleBinaries = true

podman {
  enabled = true
}

// create unique workflow ids through timestamps
// the ids are used for structured outputs
import java.time.Instant
Instant inst = Instant.now()
workflow_id = inst.toString()


report {
  enabled = true
  overwrite = true
  file = "${params.output_dir}/report.html"
}

timeline {
  enabled = true
  overwrite = true
  file = "${params.output_dir}/timeline.html"
}

trace {
  enabled = true
  overwrite = true
  file = "${params.output_dir}/trace.txt"
}

dag {
  enabled = true
  overwrite = true
  file = "${params.output_dir}/dag.dot"
}


profiles {
  test {
    workDir = '/data/fhoelsch/test_nextflow_work'
  }
}


// deactivate publishing by default, so we dont spam outputs and waste storage
process {
  publishDir = ["enabled":false]
}


params.output_dir = "$NEXTFLOW_OUTPUTDIR_CUSTOM/${workflow_id}"
params.outdir = "$NEXTFLOW_OUTPUTDIR_CUSTOM/${workflow_id}"
params.workdir = "$NEXTFLOW_WORKDIR_CUSTOM"

// cio variantinterpretation specific configs
params.input = "$PRIVATE_TESTDATA_DIR/samplesheets/samplesheet_cio_vcf.csv"
params.fasta = "$NGS_REFERENCE_DIR/ncbi_grch38_wholegenomefasta_genome.fa"
params.vep_cache = "$NGS_REFERENCE_DIR/vep_cache/108/indexed/"

params {
  output_dir = "$NEXTFLOW_OUTPUTDIR_CUSTOM/${workflow_id}"
  outdir = "$NEXTFLOW_OUTPUTDIR_CUSTOM/${workflow_id}"
  workdir = "$NEXTFLOW_WORKDIR_CUSTOM"

  clc_workflow_name = '"name_of_clc_workflow"'

  // full filepaths to the import export directories on the clc server master node
  clc_import_dir = ''
  clc_export_dir = ''

  // full paths, to where inputs and outputs should be moved to on the network attached storage
  nas_import_dir = "$NAS_IMPORT_DIR"
  nas_export_dir = "$NAS_EXPORT_DIR"

  reference_data = '$NGS_REFERENCE_DIR/arriba_reference/GRCh38+GENCODE38/'
  clc_destdir = ''

  // gatk reference genome
  refgenome = "$NGS_REFERENCE_DIR/sarek_reference/gatk_grch38/Homo_sapiens/GATK/GRCh38/Sequence/WholeGenomeFasta/Homo_sapiens_assembly38.fasta"

  //gatk intervals
  intervals = "$NGS_REFERENCE_DIR/sarek_reference/gatk_grch38/Homo_sapiens/GATK/GRCh38/Annotation/intervals/wgs_calling_regions_noseconds.hg38.bed"

  //gatk panel of normals
  panel_of_normals = "$NGS_REFERENCE_DIR/sarek_reference/gatk_grch38/Homo_sapiens/GATK/GRCh38/Annotation/GATKBundle/1000g_pon.hg38.vcf.gz"

  // germline resource (gnomad)
  germline_resource = "$NGS_REFERENCE_DIR/sarek_reference/gatk_grch38/Homo_sapiens/GATK/GRCh38/Annotation/GATKBundle/af-only-gnomad.hg38.vcf.gz"

  // run slower but save memory by using bwa, not bwa2 (bwamem2)
  bwa_tool = 'bwa'

  // dbsnp reference for gatk recalibration
  known_sites = "$NGS_REFERENCE_DIR/sarek_reference/gatk_grch38/Homo_sapiens/GATK/GRCh38/Annotation/GATKBundle/dbsnp_146.hg38.vcf.gz"

}
